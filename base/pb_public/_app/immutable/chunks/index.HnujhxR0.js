import{v as _}from"./runtime.bbI-llpg.js";const f=[];function l(){}function m(e,n){return{subscribe:v(e,n).subscribe}}function q(e,n){return e!=e?n==n:e!==n||e&&typeof e=="object"||typeof e=="function"}function v(e,n=l){let r=null;const o=new Set;function i(s){if(q(e,s)&&(e=s,r)){const u=!f.length;for(const t of o)t[1](),f.push(t,e);if(u){for(let t=0;t<f.length;t+=2)f[t][0](f[t+1]);f.length=0}}}function a(s){i(s(e))}function b(s,u=l){const t=[s,u];return o.add(t),o.size===1&&(r=n(i,a)||l),s(e),()=>{o.delete(t),o.size===0&&r&&(r(),r=null)}}return{set:i,update:a,subscribe:b}}function x(e){return e()}function z(e){e.forEach(x)}function E(e,n,r){const o=!Array.isArray(e),i=o?[e]:e;if(!i.every(Boolean))throw new Error("derived() expects stores as input, got a falsy value");const a=n.length<2;return m(r,(b,s)=>{let u=!1;const t=[];let p=0,d=l;const y=()=>{if(p)return;d();const c=n(o?t[0]:t,b,s);a?b(c):d=typeof c=="function"?c:l},h=i.map((c,g)=>_(c,w=>{t[g]=w,p&=~(1<<g),u&&y()},()=>{p|=1<<g}));return u=!0,y(),function(){z(h),d(),u=!1}})}function j(e){let n;return _(e,r=>n=r)(),n}export{E as d,j as g,v as w};
